{"version":3,"sources":["apis/recipePuppy.js","components/Recipe.js","components/Recipes.js","components/RecipesList.js","actions/index.js","components/App.js","reducers/index.js","reducers/recipesReducer.js","index.js"],"names":["axios","create","baseURL","Recipe","props","recipesToDisplay","map","recipe","index","react_default","a","createElement","className","key","title","src","thumbnail","alt","concat","ingredients","href","target","rel","Recipes","state","prevProps","_this2","this","userIngredients","setState","recipes","filter","split","some","r","indexOf","React","Component","connect","RecipesList","options","uniqueIngredients","value","self","onInputChange","_this","ingredient","label","getIngredietns","item","join","sort","fetchRecipes","react","lib_default","placeholderButtonLabel","onChange","components_Recipes","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","recipePuppy","get","sent","type","payload","data","results","stop","_x","apply","arguments","App","components_RecipesList","combineReducers","length","undefined","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.465a18c2.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://www.recipepuppy.com/'\n});","import React from \"react\";\n\nexport default function Recipe(props) {\n  return props.recipesToDisplay.map((recipe, index) => {\n    return (\n      <div className=\"item\" key={index}>\n        <div className=\"content\">\n          <div className=\"description\">\n            <h2>{recipe.title}</h2>\n            <img\n              className=\"ui right floated middle aligned rounded image\"\n              src={recipe.thumbnail}\n              alt={`recipe ${recipe.title}`}\n            />\n            <p>{`Ingredients: ${recipe.ingredients}`}</p>\n            <a href={recipe.href} target=\"_blank\" rel=\"noopener noreferrer\">\n              Check full recipe\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  });\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Recipe from './Recipe';\n\nclass Recipes extends React.Component {\n  state = {\n    recipesToDisplay: []\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.userIngredients !== this.props.userIngredients) {\n      this.setState({\n        recipesToDisplay: this.props.recipes.filter(recipe => {\n          return recipe.ingredients.split(', ').some(r => this.props.userIngredients.indexOf(r) >= 0);\n        })\n      });\n    }\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided list\"><Recipe recipesToDisplay={this.state.recipesToDisplay} /></div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(mapStateToProps)(Recipes);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRecipes } from \"../actions\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\n\nimport Recipes from \"./Recipes\";\n\nclass RecipesList extends React.Component {\n  state = {\n    userIngredients: [],\n    options: [],\n  };\n\n  componentDidMount() {\n    this.props.fetchRecipes();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.recipes !== this.props.recipes) {\n      this.getIngredietns();\n    }\n  }\n\n  uniqueIngredients = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  onInputChange = value => {\n    this.setState({\n      userIngredients: value.map(ingredient => ingredient.label)\n    });\n  };\n\n  getIngredietns = () => {\n    const { recipes } = this.props;\n    const ingredients = recipes\n      .map(item => {\n        return item.ingredients;\n      })\n      .join(\", \")\n      .split(\", \")\n      .sort();\n    this.setState({\n      options: ingredients.filter(this.uniqueIngredients).map((item, index) => {\n        return { label: item, value: index };\n      })\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ReactMultiSelectCheckboxes\n          options={this.state.options}\n          placeholderButtonLabel=\"Select ingredients...\"\n          onChange={this.onInputChange}\n        />\n        <Recipes userIngredients={this.state.userIngredients} />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { recipes: state.recipes };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchRecipes }\n)(RecipesList);\n","import recipePuppy from \"../apis/recipePuppy\";\n\nexport const fetchRecipes = () => async dispatch => {\n  const response = await recipePuppy.get(\"/api\");\n\n  dispatch({ type: \"FETCH_RECIPES\", payload: response.data.results });\n};\n","import React from 'react';\n\nimport RecipesList from './RecipesList';\n\nconst App = () => {\n    return <div className=\"ui container\"><RecipesList /></div>  \n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport recipesReducer from './recipesReducer';\n\nexport default combineReducers({\n    recipes: recipesReducer\n});","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_RECIPES\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root') \n);"],"sourceRoot":""}